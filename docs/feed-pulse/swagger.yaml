basePath: /
definitions:
  auth.LoginUser:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  auth.RegisterUser:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  httpUtils.HTTPError:
    properties:
      error:
        example: bad request
        type: string
    type: object
  httpUtils.HTTPMessage:
    properties:
      message:
        example: ok
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is the API documentation for the Feed Pulse application.
  termsOfService: http://swagger.io/terms/
  title: Feed Pulse API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with username/email and password
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: login successful response
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
        "400":
          description: bad request error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "401":
          description: authentication error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "404":
          description: user not found error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      summary: Authenticate a user
      tags:
      - Auth
  /api/auth/logout:
    get:
      consumes:
      - '*/*'
      description: Logout a user by invalidating their session token
      produces:
      - application/json
      responses:
        "200":
          description: user successfully logged out
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
        "401":
          description: authentication error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Logout a user
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email and password
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: registration successful response
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
        "400":
          description: bad request error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "409":
          description: conflict error - resource already exists
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      summary: Register a new user
      tags:
      - Auth
  /ping:
    get:
      consumes:
      - '*/*'
      description: Get the status of server
      produces:
      - application/json
      responses:
        "200":
          description: server status response
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
      summary: Show the status of server
      tags:
      - Ping
schemes:
- http
swagger: "2.0"
