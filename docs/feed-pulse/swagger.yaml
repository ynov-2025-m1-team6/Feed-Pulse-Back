basePath: /
definitions:
  Feedback.Feedback:
    properties:
      board_id:
        type: integer
      channel:
        type: string
      createdAt:
        type: string
      date:
        type: string
      id:
        type: integer
      text:
        type: string
      updatedAt:
        type: string
    type: object
  Feedback.FeedbackWithAnalysis:
    properties:
      board_id:
        type: integer
      channel:
        type: string
      date:
        type: string
      feedback_id:
        type: integer
      sentiment_score:
        type: number
      text:
        type: string
      topic:
        type: string
    type: object
  User.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      uuid:
        type: string
    type: object
  api_handlers_Board.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api_handlers_Feedback.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api_handlers_auth.LoginUser:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  api_handlers_auth.RegisterUser:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Board.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_auth.LoginUser:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_auth.RegisterUser:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  httpUtils.HTTPError:
    properties:
      error:
        example: bad request
        type: string
    type: object
  httpUtils.HTTPMessage:
    properties:
      message:
        example: ok
        type: string
    type: object
  metric.Metric:
    properties:
      Sentiment:
        $ref: '#/definitions/metric.Sentiment'
      averageSentiment:
        type: number
      distributionByChannel:
        additionalProperties:
          type: number
        type: object
      distributionByTopic:
        additionalProperties:
          type: number
        type: object
      percentageSentimentUnderTreshold:
        type: number
      volumetryByDay:
        additionalProperties:
          type: number
        type: object
    type: object
  metric.Sentiment:
    properties:
      negative:
        type: number
      neutral:
        type: number
      positive:
        type: number
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is the API documentation for the Feed Pulse application.
  termsOfService: http://swagger.io/terms/
  title: Feed Pulse API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with username/email and password
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api_handlers_auth.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: login successful response
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
        "400":
          description: bad request error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "401":
          description: authentication error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "404":
          description: user not found error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      summary: Authenticate a user
      tags:
      - Auth
  /api/auth/logout:
    get:
      consumes:
      - '*/*'
      description: Logout a user by invalidating their session token
      produces:
      - application/json
      responses:
        "200":
          description: user successfully logged out
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
        "401":
          description: authentication error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Logout a user
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email and password
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api_handlers_auth.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: registration successful response
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
        "400":
          description: bad request error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "409":
          description: conflict error - resource already exists
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      summary: Register a new user
      tags:
      - Auth
  /api/auth/user:
    get:
      consumes:
      - application/json
      description: Get the current user's information
      produces:
      - application/json
      responses:
        "200":
          description: user information
          schema:
            $ref: '#/definitions/User.User'
        "401":
          description: authentication error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "404":
          description: user not found error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/httpUtils.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - Auth
  /api/board/metrics:
    get:
      consumes:
      - application/json
      description: Get metrics for a specific board based on feedback data
      produces:
      - application/json
      responses:
        "200":
          description: Metrics data
          schema:
            $ref: '#/definitions/metric.Metric'
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/api_handlers_Board.ErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/api_handlers_Board.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api_handlers_Board.ErrorResponse'
      summary: Get board metrics
      tags:
      - Board
  /api/feedbacks:
    get:
      description: Fetch all feedbacks from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of feedbacks
          schema:
            $ref: '#/definitions/Feedback.Feedback'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
      summary: Get all feedbacks
      tags:
      - Feedback
  /api/feedbacks/analyses:
    get:
      consumes:
      - application/json
      description: Retrieves feedbacks with their analyses for the authenticated user
      parameters:
      - description: Filter feedbacks by channel
        in: query
        name: channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of feedbacks with analyses
          schema:
            items:
              $ref: '#/definitions/Feedback.FeedbackWithAnalysis'
            type: array
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
      summary: Get feedbacks for the authenticated user
      tags:
      - Feedback
  /api/feedbacks/fetch:
    post:
      consumes:
      - application/json
      description: Fetches comment data from JSONPlaceholder API and converts them
        to feedback data
      parameters:
      - description: Limit the number of feedbacks to fetch
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: JSONPlaceholder data processed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
      summary: Fetch feedback data from external API
      tags:
      - Feedback
  /api/feedbacks/upload:
    post:
      consumes:
      - multipart/form-data
      description: Process a JSON file upload containing feedback data and store it
        in the database
      parameters:
      - description: JSON file containing feedback data
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: JSONPlaceholder data processed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse'
      summary: Upload a file containing feedbacks
      tags:
      - Feedback
  /ping:
    get:
      consumes:
      - '*/*'
      description: Get the status of server
      produces:
      - application/json
      responses:
        "200":
          description: server status response
          schema:
            $ref: '#/definitions/httpUtils.HTTPMessage'
      summary: Show the status of server
      tags:
      - Ping
schemes:
- http
swagger: "2.0"
