{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the Feed Pulse application.",
        "title": "Feed Pulse API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Login a user with username/email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_handlers_auth.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successful response",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPMessage"
                        }
                    },
                    "400": {
                        "description": "bad request error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "401": {
                        "description": "authentication error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "user not found error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Logout a user by invalidating their session token",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "responses": {
                    "200": {
                        "description": "user successfully logged out",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPMessage"
                        }
                    },
                    "401": {
                        "description": "authentication error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user with username, email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_handlers_auth.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "registration successful response",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPMessage"
                        }
                    },
                    "400": {
                        "description": "bad request error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "409": {
                        "description": "conflict error - resource already exists",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/auth/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "user information",
                        "schema": {
                            "$ref": "#/definitions/User.User"
                        }
                    },
                    "401": {
                        "description": "authentication error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "user not found error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/board/metrics": {
            "get": {
                "description": "Get metrics for a specific board based on feedback data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Board"
                ],
                "summary": "Get board metrics",
                "responses": {
                    "200": {
                        "description": "Metrics data",
                        "schema": {
                            "$ref": "#/definitions/metric.Metric"
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "$ref": "#/definitions/api_handlers_Board.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/api_handlers_Board.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api_handlers_Board.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/feedbacks": {
            "get": {
                "description": "Fetch all feedbacks from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all feedbacks",
                "responses": {
                    "200": {
                        "description": "List of feedbacks",
                        "schema": {
                            "$ref": "#/definitions/Feedback.Feedback"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/feedbacks/analyses": {
            "get": {
                "description": "Retrieves feedbacks with their analyses for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback"
                ],
                "summary": "Get feedbacks for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter feedbacks by channel",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of feedbacks with analyses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feedback.FeedbackWithAnalysis"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/feedbacks/fetch": {
            "post": {
                "description": "Fetches comment data from JSONPlaceholder API and converts them to feedback data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback"
                ],
                "summary": "Fetch feedback data from external API",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of feedbacks to fetch",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSONPlaceholder data processed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/feedbacks/upload": {
            "post": {
                "description": "Process a JSON file upload containing feedback data and store it in the database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback"
                ],
                "summary": "Upload a file containing feedbacks",
                "parameters": [
                    {
                        "type": "file",
                        "description": "JSON file containing feedback data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSONPlaceholder data processed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Get the status of server",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Show the status of server",
                "responses": {
                    "200": {
                        "description": "server status response",
                        "schema": {
                            "$ref": "#/definitions/httpUtils.HTTPMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Feedback.Feedback": {
            "type": "object",
            "properties": {
                "board_id": {
                    "type": "integer"
                },
                "channel": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "Feedback.FeedbackWithAnalysis": {
            "type": "object",
            "properties": {
                "board_id": {
                    "type": "integer"
                },
                "channel": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "feedback_id": {
                    "type": "integer"
                },
                "sentiment_score": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "User.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "api_handlers_Board.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api_handlers_Feedback.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api_handlers_auth.LoginUser": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api_handlers_auth.RegisterUser": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Board.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_Feedback.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_auth.LoginUser": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_ynov-2025-m1-team6_Feed-Pulse-Back_internal_api_handlers_auth.RegisterUser": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "httpUtils.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "bad request"
                }
            }
        },
        "httpUtils.HTTPMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "metric.Metric": {
            "type": "object",
            "properties": {
                "Sentiment": {
                    "$ref": "#/definitions/metric.Sentiment"
                },
                "averageSentiment": {
                    "type": "number"
                },
                "distributionByChannel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "distributionByTopic": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "percentageSentimentUnderTreshold": {
                    "type": "number"
                },
                "volumetryByDay": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "metric.Sentiment": {
            "type": "object",
            "properties": {
                "negative": {
                    "type": "number"
                },
                "neutral": {
                    "type": "number"
                },
                "positive": {
                    "type": "number"
                }
            }
        }
    }
}